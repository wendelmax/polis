version: '3.8'

services:
  polis:
    build: .
    container_name: polis
    ports:
      - "8080:8080"    # REST API
      - "50051:50051"  # gRPC API
    volumes:
      - polis-data:/var/lib/polis
      - polis-logs:/var/log/polis
      - polis-config:/etc/polis
      - /var/run/docker.sock:/var/run/docker.sock  # For Docker integration
    environment:
      - RUST_LOG=info
      - POLIS_DATA_DIR=/var/lib/polis
      - POLIS_LOG_DIR=/var/log/polis
      - POLIS_CONFIG_DIR=/etc/polis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Example web service
  web:
    image: nginx:alpine
    container_name: polis-web
    ports:
      - "80:80"
    volumes:
      - ./examples/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - polis
    restart: unless-stopped

  # Example database service
  database:
    image: postgres:15-alpine
    container_name: polis-db
    environment:
      - POSTGRES_DB=polis
      - POSTGRES_USER=polis
      - POSTGRES_PASSWORD=polis123
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: polis-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./examples/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Monitoring with Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: polis-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./examples/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./examples/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    restart: unless-stopped

volumes:
  polis-data:
    driver: local
  polis-logs:
    driver: local
  polis-config:
    driver: local
  postgres-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  default:
    name: polis-network
    driver: bridge
